name: main

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

env:
    CARGO_TERM_COLOR: always

jobs:
    check-fmt:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: "22.x"
            - run: npm ci
            - name: Check formatting
              run: npm run fmt -- --check
            - name: Check Rust formatting
              run: cargo fmt -- --check
    build:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]
        runs-on: ${{ matrix.os }}
        env:
            RUSTFLAGS: -D warnings
        steps:
            - uses: actions/checkout@v4
            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - run: npm ci;
            - name: Prepare builds
              run: |
                  ./prepare_builds/prepare_all_projects.sh
            - name: Build all projects
              run: |
                  ./prepare_builds/build_all_projects.sh
            # - name: Build rapier-compat
            #   run: |
            #       cd rapier-compat;
            #       npm ci;
            #       npm run build;
            #       npm run test;
            - uses: actions/upload-artifact@v4
              with:
                  name: pkg ${{ matrix.os }}
                  path: |
                      builds/rapier2d/pkg
                      builds/rapier2d-deterministic/pkg
                      builds/rapier2d-simd/pkg
                      builds/rapier3d/pkg
                      builds/rapier3d-deterministic/pkg
                      builds/rapier3d-simd/pkg
                  overwrite: true
    publish:
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/master'
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: pkg ubuntu-latest
            - uses: actions/setup-node@v4
              with:
                  node-version: "22.x"
                  registry-url: "https://registry.npmjs.org"
            - name: Publish rapier3d
              run: |
                  cd rapier3d/pkg; npm version 0.0.0-$(git rev-parse --short HEAD)-$(date '+%Y%m%d') --git-tag-version false; 
                  npm publish --tag canary --access public;
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            - name: Publish rapier2d
              run: |
                  cd rapier2d/pkg;
                  npm version 0.0.0-$(git rev-parse --short HEAD)-$(date '+%Y%m%d') --git-tag-version false;
                  npm publish --tag canary --access public;
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            - name: Publish rapier3d-compat
              run: |
                  cd rapier-compat/pkg3d;
                  npm version 0.0.0-$(git rev-parse --short HEAD)-$(date '+%Y%m%d') --git-tag-version false;
                  npm publish --tag canary --access public;
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            - name: Publish rapier2d-compat
              run: |
                  cd rapier-compat/pkg2d;
                  npm version 0.0.0-$(git rev-parse --short HEAD)-$(date '+%Y%m%d') --git-tag-version false;
                  npm publish --tag canary --access public;
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
