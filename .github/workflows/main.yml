name: main

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]
    workflow_dispatch:

env:
    CARGO_TERM_COLOR: always

jobs:
    check-fmt:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: "22.x"
            - run: npm ci
            - name: Check formatting
              run: npm run fmt -- --check
            - name: Check Rust formatting
              run: cargo fmt -- --check
    build:
        runs-on: ubuntu-latest
        env:
            RUSTFLAGS: -D warnings
        steps:
            - uses: actions/checkout@v4
            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - run: npm ci;
            - name: Prepare no-compat builds
              run: |
                  ./builds/prepare_builds/prepare_all_projects.sh
            - name: Build all no-compat projects
              run: |
                  ./builds/prepare_builds/build_all_projects.sh
            - name: Build rapier-compat
              run: |
                  cd rapier-compat;
                  npm ci;
                  npm run build;
                  npm run test;
            - uses: actions/upload-artifact@v4
              with:
                  name: pkg ubuntu-latest
                  path: |
                      builds/*/pkg
                      rapier-compat/pkg2d
                      rapier-compat/pkg3d
                  overwrite: true
    publish:
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/master'
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: pkg ubuntu-latest
            - uses: actions/setup-node@v4
              with:
                  node-version: "22.x"
                  registry-url: "https://registry.npmjs.org"
            - name: Publish no compat projects
              run: |
                  ./publish_all_no-compat.sh
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            - name: Publish rapier3d-compat
              run: |
                  cd rapier-compat/pkg3d;
                  npm version 0.0.0-$(git rev-parse --short HEAD)-$(date '+%Y%m%d') --git-tag-version false;
                  npm publish --tag canary --access public;
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            - name: Publish rapier2d-compat
              run: |
                  cd rapier-compat/pkg2d;
                  npm version 0.0.0-$(git rev-parse --short HEAD)-$(date '+%Y%m%d') --git-tag-version false;
                  npm publish --tag canary --access public;
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
